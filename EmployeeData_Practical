#include <iostream>
#include <fstream>
using namespace std;

class Employee {
public:
    int employeeId;
    string name;
    string designation;
    int experience;
    int age;

    void accept() {
        cout << "\nEnter Employee ID: ";
        cin >> employeeId;
        cout << "Enter the Name: ";
        cin >> name;
        cout << "Enter the Designation: ";
        cin >> designation;
        cout << "Enter the Experience: ";
        cin >> experience;
        cout << "Enter the Age: ";
        cin >> age;
    }

    void show() {
        cout << "\nEmployee ID: " << employeeId << "\nName: " << name
             << "\nDesignation: " << designation << "\nExperience: " << experience
             << "\nAge: " << age << "\n";
    }
};

int main() {
    Employee e;
    int choice, employeeId;

    do {
        cout << "\nMENU:\n";
        cout << "1. Insert\n";
        cout << "2. Show\n";
        cout << "3. Search\n";
        cout << "4. Delete an Employee Record\n";
        cout << "5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                {
                    ofstream file("employee.txt", ios::app);
                    if (!file) {
                        cout << "Error creating file!" << endl;
                        break;
                    }

                    e.accept();
                    file << e.employeeId << " " << e.name << " " << e.designation << " "
                         << e.experience << " " << e.age << endl;

                    cout << "Record inserted successfully!\n";
                    file.close();
                }
                break;

            case 2:
                {
                    ifstream file("employee.txt");
                    if (!file) {
                        cout << "Error opening file!" << endl;
                        break;
                    }

                    while (file >> e.employeeId >> e.name >> e.designation >> e.experience >> e.age) {
                        e.show();
                    }
                    file.close();
                }
                break;

            case 3:
                {
                    cout << "Enter Employee ID: ";
                    cin >> employeeId;

                    ifstream file("employee.txt");
                    if (!file) {
                        cout << "Error opening file!" << endl;
                        break;
                    }

                    bool found = false;
                    while (file >> e.employeeId >> e.name >> e.designation >> e.experience >> e.age) {
                        if (e.employeeId == employeeId) {
                            e.show();
                            found = true;
                            break;
                        }
                    }
                    file.close();

                    if (!found) {
                        cout << "Employee record not found!\n";
                    }
                }
                break;

            case 4:
                {
                    cout << "Enter Employee ID to delete: ";
                    cin >> employeeId;

                    ifstream file("employee.txt");
                    if (!file) {
                        cout << "Error opening file!" << endl;
                        break;
                    }

                    ofstream temp("temp.txt");
                    if (!temp) {
                        cout << "Error creating temporary file!" << endl;
                        file.close();
                        break;
                    }

                    bool deleted = false;
                    while (file >> e.employeeId >> e.name >> e.designation >> e.experience >> e.age) {
                        if (e.employeeId != employeeId) {
                            temp << e.employeeId << " " << e.name << " " << e.designation << " "
                                 << e.experience << " " << e.age << endl;
                        } else {
                            deleted = true;
                        }
                    }
                    file.close();
                    temp.close();

                    if (deleted) {
                        remove("employee.txt");
                        rename("temp.txt", "employee.txt");
                        cout << "The record with the Employee ID " << employeeId << " has been deleted.\n";
                    } else {
                        cout << "Employee record not found!\n";
                    }
                }
                break;

            case 5:
                cout << "Exiting the program.\n";
                break;

            default:
                cout << "Invalid choice! Please try again.\n";
        }

    } while (choice != 5);

    return 0;
}
